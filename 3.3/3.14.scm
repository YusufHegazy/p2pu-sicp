
(define (mystery x)
  (define (loop x y)
    (if (null? x)
	y
	(let ((temp (cdr x)))
	  (set-cdr! x y)
	  (loop temp x))))
  (loop x '()))

;; Mystery reverses x.

(define v (list 'a 'b 'c 'd))

;; 
;;  v    ╭───┬───╮   ╭───┬───╮   ╭───┬───╮   ╭───┬───╮ 
;;  ────>│ ∘ │ ∘─┼──>│ ∘ │ ∘─┼──>│ ∘ │ ∘─┼──>│ ∘ │ ╱ │ 
;;       ╰─┼─┴───╯   ╰─┼─┴───╯   ╰─┼─┴───╯   ╰─┼─┴───╯ 
;;         │           │           │           │ 
;;       ╭─V─╮       ╭─V─╮       ╭─V─╮       ╭─V─╮
;;       │ a │       │ b │       │ c │       │ d │
;;       ╰───╯       ╰───╯       ╰───╯       ╰───╯
;;

(define w (mystery v))

;; Diagrams after defining w:
;; 
;;  v    ╭───┬───╮
;;  ────>│ ∘ │ ╱ │
;;       ╰─┼─┴───╯
;;         │      
;;       ╭─V─╮    
;;       │ a │    
;;       ╰───╯    
;;
;; 
;;  w    ╭───┬───╮   ╭───┬───╮   ╭───┬───╮   ╭───┬───╮ 
;;  ────>│ ∘ │ ∘─┼──>│ ∘ │ ∘─┼──>│ ∘ │ ∘─┼──>│ ∘ │ ╱ │ 
;;       ╰─┼─┴───╯   ╰─┼─┴───╯   ╰─┼─┴───╯   ╰─┼─┴───╯ 
;;         │           │           │           │ 
;;       ╭─V─╮       ╭─V─╮       ╭─V─╮       ╭─V─╮
;;       │ d │       │ c │       │ b │       │ a │
;;       ╰───╯       ╰───╯       ╰───╯       ╰───╯
;;

v ; '(a)
w ; '(d c b a)
